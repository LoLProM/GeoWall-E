namespace GSharpProject;

public static class TokenData
{
    public static readonly HashSet<TokenType> BooleanTokens = new()
{
    TokenType.LowerToken,
    TokenType.BiggerToken,
    TokenType.LowerOrEqualToken,
    TokenType.BiggerOrEqualToken,
    TokenType.NotEqualToken,
    TokenType.SingleAndToken,
    TokenType.SingleOrToken,
    TokenType.EqualToken,
};
}
public enum TokenType
{

    NumberToken,
    PlusToken,
    MinusToken,
    MultiplyToken,
    DivisionToken,
    OpenParenthesisToken,
    CloseParenthesisToken,
    EndOffLineToken,
    NotToken,
    LowerToken,
    BiggerToken,
    LowerOrEqualToken,
    BiggerOrEqualToken,
    NotEqualToken,
    ExponentialToken,
    ModuleToken,
    SingleAndToken,
    SingleOrToken,
    EqualToken,
    SingleEqualToken,
    WrongToken,
    LetToken,
    InToken,
    StringToken,
    ColonToken,
    Identifier,
    OpenBraceToken,
    CloseBraceToken,
    ThreePointsToken,
    END,

    //Keywords
    IfKeyword,
    ElseKeyword,
    ThenKeyword,

    // Expressions
    AssignmentExpression,
    LiteralExpression,
    BinaryExpression,
    UnaryExpression,
    ParenthesizedExpression,
    IfElseExpression,
    Point,
    Line,
    Circle,
    Ray,
    Segment,
    Arc,
    Color,
    FunctionCall,
    FunctionReference,
    LiteralSequence,
    RangeSequence,
    InfiniteSequence,
    LetIn,
    Measure,
    Draw,
    Import,
    Underscore,
    VoidExpression,
    DrawKeyword,
    SequenceToken,
    TSequence,
    DoubleNumber,
    StatementsColl,
    Undefine,
    FunctionDeclaration,
    AdditionMeasure,
    DifferenceMeasure,
    MultiplicationMeasure,
    DivisionMeasure,
    Restore,
    ColorExpression
}
